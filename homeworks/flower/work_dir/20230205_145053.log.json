{"env_info": "sys.platform: linux\nPython: 3.9.16 (main, Jan 11 2023, 16:05:54) [GCC 11.2.0]\nCUDA available: True\nGPU 0: NVIDIA GeForce RTX 3090\nCUDA_HOME: /data/apps/cuda/11.7\nNVCC: Cuda compilation tools, release 11.7, V11.7.64\nGCC: gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44)\nPyTorch: 1.13.1\nPyTorch compiling details: PyTorch built with:\n  - GCC 9.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.7\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.5\n  - Magma 2.6.1\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.14.1\nOpenCV: 4.7.0\nMMCV: 1.7.1\nMMCV Compiler: n/a\nMMCV CUDA Compiler: n/a\nMMClassification: 0.25.0+", "seed": 692165865, "mmcls_version": "0.25.0", "config": "model = dict(\n    type='ImageClassifier',\n    backbone=dict(type='ShuffleNetV2', widen_factor=1.0, frozen_stages=3),\n    neck=dict(type='GlobalAveragePooling'),\n    head=dict(\n        type='LinearClsHead',\n        num_classes=5,\n        in_channels=1024,\n        loss=dict(type='CrossEntropyLoss', loss_weight=1.0),\n        topk=(1, )))\ndataset_type = 'ImageNet'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='RandomResizedCrop', size=196, backend='pillow'),\n    dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='ImageToTensor', keys=['img']),\n    dict(type='ToTensor', keys=['gt_label']),\n    dict(type='Collect', keys=['img', 'gt_label'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='Resize', size=(224, -1), backend='pillow'),\n    dict(type='CenterCrop', crop_size=196),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='ImageToTensor', keys=['img']),\n    dict(type='Collect', keys=['img'])\n]\ndata = dict(\n    samples_per_gpu=256,\n    workers_per_gpu=2,\n    train=dict(\n        type='CustomDataset',\n        data_prefix=\n        '/HOME/scz0bdh/run/mmlab_homework/one/dataset/flower_dataset/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='RandomResizedCrop', size=196, backend='pillow'),\n            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='ToTensor', keys=['gt_label']),\n            dict(type='Collect', keys=['img', 'gt_label'])\n        ]),\n    val=dict(\n        type='CustomDataset',\n        data_prefix=\n        '/HOME/scz0bdh/run/mmlab_homework/one/dataset/flower_dataset/val',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='Resize', size=(224, -1), backend='pillow'),\n            dict(type='CenterCrop', crop_size=196),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ]))\nevaluation = dict(\n    interval=1,\n    metric='accuracy',\n    metric_options=dict(topk=(1, )),\n    save_best='auto')\noptimizer = dict(\n    type='Adam',\n    lr=0.0003,\n    weight_decay=4e-05,\n    paramwise_cfg=dict(norm_decay_mult=0))\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(policy='CosineAnnealing', min_lr=0, by_epoch=False)\nrunner = dict(type='EpochBasedRunner', max_epochs=20)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '/HOME/scz0bdh/run/mmlab_homework/one/checkpoints/shufflenet_v2_batch1024_imagenet_20200812-5bf4721e.pth'\nresume_from = None\nworkflow = [('train', 1), ('val', 1)]\nwork_dir = 'work_dir'\ngpu_ids = [0]\ndevice = 'cuda'\nseed = 692165865\n", "CLASSES": ["daisy", "dandelion", "rose", "sunflower", "tulip"], "hook_msgs": {}}
{"mode": "val", "epoch": 1, "iter": 3, "lr": 0.0003, "accuracy_top-1": 81.99301}
{"mode": "val", "epoch": 1, "iter": 3, "lr": 0.0003, "memory": 575, "data_time": 1.06994, "loss": 1.01796, "time": 1.09126}
{"mode": "val", "epoch": 2, "iter": 3, "lr": 0.00029, "accuracy_top-1": 87.93707}
{"mode": "val", "epoch": 2, "iter": 3, "lr": 0.00029, "memory": 575, "data_time": 1.05013, "loss": 0.61987, "time": 1.07108}
{"mode": "val", "epoch": 3, "iter": 3, "lr": 0.00028, "accuracy_top-1": 89.16084}
{"mode": "val", "epoch": 3, "iter": 3, "lr": 0.00028, "memory": 575, "data_time": 1.05526, "loss": 0.48517, "time": 1.07602}
{"mode": "val", "epoch": 4, "iter": 3, "lr": 0.00027, "accuracy_top-1": 90.03497}
{"mode": "val", "epoch": 4, "iter": 3, "lr": 0.00027, "memory": 575, "data_time": 1.06319, "loss": 0.41637, "time": 1.08412}
{"mode": "val", "epoch": 5, "iter": 3, "lr": 0.00026, "accuracy_top-1": 91.08392}
{"mode": "val", "epoch": 5, "iter": 3, "lr": 0.00026, "memory": 575, "data_time": 1.05709, "loss": 0.39194, "time": 1.07799}
{"mode": "val", "epoch": 6, "iter": 3, "lr": 0.00024, "accuracy_top-1": 91.78322}
{"mode": "val", "epoch": 6, "iter": 3, "lr": 0.00024, "memory": 575, "data_time": 1.04644, "loss": 0.34789, "time": 1.06751}
{"mode": "val", "epoch": 7, "iter": 3, "lr": 0.00022, "accuracy_top-1": 91.78322}
{"mode": "val", "epoch": 7, "iter": 3, "lr": 0.00022, "memory": 575, "data_time": 1.05688, "loss": 0.3511, "time": 1.07778}
{"mode": "val", "epoch": 8, "iter": 3, "lr": 0.0002, "accuracy_top-1": 91.95805}
{"mode": "val", "epoch": 8, "iter": 3, "lr": 0.0002, "memory": 575, "data_time": 1.04283, "loss": 0.35007, "time": 1.06368}
{"mode": "val", "epoch": 9, "iter": 3, "lr": 0.00018, "accuracy_top-1": 91.78322}
{"mode": "val", "epoch": 9, "iter": 3, "lr": 0.00018, "memory": 575, "data_time": 1.05483, "loss": 0.31597, "time": 1.07566}
{"mode": "val", "epoch": 10, "iter": 3, "lr": 0.00015, "accuracy_top-1": 91.78322}
{"mode": "val", "epoch": 10, "iter": 3, "lr": 0.00015, "memory": 575, "data_time": 1.04723, "loss": 0.30047, "time": 1.06835}
{"mode": "val", "epoch": 11, "iter": 3, "lr": 0.00013, "accuracy_top-1": 91.78322}
{"mode": "val", "epoch": 11, "iter": 3, "lr": 0.00013, "memory": 575, "data_time": 1.04449, "loss": 0.31042, "time": 1.06537}
{"mode": "val", "epoch": 12, "iter": 3, "lr": 0.00011, "accuracy_top-1": 91.78322}
{"mode": "val", "epoch": 12, "iter": 3, "lr": 0.00011, "memory": 575, "data_time": 1.05585, "loss": 0.31729, "time": 1.07678}
{"mode": "val", "epoch": 13, "iter": 3, "lr": 8e-05, "accuracy_top-1": 92.13287}
{"mode": "val", "epoch": 13, "iter": 3, "lr": 8e-05, "memory": 575, "data_time": 1.04729, "loss": 0.30865, "time": 1.06839}
{"mode": "val", "epoch": 14, "iter": 3, "lr": 6e-05, "accuracy_top-1": 91.95805}
{"mode": "val", "epoch": 14, "iter": 3, "lr": 6e-05, "memory": 575, "data_time": 1.03974, "loss": 0.31667, "time": 1.06086}
{"mode": "val", "epoch": 15, "iter": 3, "lr": 5e-05, "accuracy_top-1": 91.95805}
{"mode": "val", "epoch": 15, "iter": 3, "lr": 5e-05, "memory": 575, "data_time": 1.05881, "loss": 0.2975, "time": 1.0796}
{"mode": "val", "epoch": 16, "iter": 3, "lr": 3e-05, "accuracy_top-1": 91.95805}
{"mode": "val", "epoch": 16, "iter": 3, "lr": 3e-05, "memory": 575, "data_time": 1.0543, "loss": 0.31138, "time": 1.07528}
{"mode": "val", "epoch": 17, "iter": 3, "lr": 2e-05, "accuracy_top-1": 91.95805}
{"mode": "val", "epoch": 17, "iter": 3, "lr": 2e-05, "memory": 575, "data_time": 1.04491, "loss": 0.28473, "time": 1.06575}
{"mode": "val", "epoch": 18, "iter": 3, "lr": 1e-05, "accuracy_top-1": 91.95805}
{"mode": "val", "epoch": 18, "iter": 3, "lr": 1e-05, "memory": 575, "data_time": 1.05077, "loss": 0.305, "time": 1.07174}
{"mode": "val", "epoch": 19, "iter": 3, "lr": 0.0, "accuracy_top-1": 92.13287}
{"mode": "val", "epoch": 19, "iter": 3, "lr": 0.0, "memory": 575, "data_time": 1.0479, "loss": 0.29338, "time": 1.06901}
{"mode": "val", "epoch": 20, "iter": 3, "lr": 0.0, "accuracy_top-1": 92.13287}
{"mode": "val", "epoch": 20, "iter": 3, "lr": 0.0, "memory": 575, "data_time": 1.04499, "loss": 0.282, "time": 1.06597}
