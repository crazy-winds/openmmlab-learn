2023-02-05 16:40:51,120 - mmcls - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.9.16 (main, Jan 11 2023, 16:05:54) [GCC 11.2.0]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 3090
CUDA_HOME: /data/apps/cuda/11.7
NVCC: Cuda compilation tools, release 11.7, V11.7.64
GCC: gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44)
PyTorch: 1.13.1
PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.14.1
OpenCV: 4.7.0
MMCV: 1.7.1
MMCV Compiler: n/a
MMCV CUDA Compiler: n/a
MMClassification: 0.25.0+
------------------------------------------------------------

2023-02-05 16:40:51,121 - mmcls - INFO - Distributed training: False
2023-02-05 16:40:51,207 - mmcls - INFO - Config:
model = dict(
    type='ImageClassifier',
    backbone=dict(
        type='ResNet_CIFAR',
        depth=18,
        num_stages=4,
        out_indices=(3, ),
        style='pytorch',
        frozen_stages=4),
    neck=dict(type='GlobalAveragePooling'),
    head=dict(
        type='LinearClsHead',
        num_classes=10,
        in_channels=512,
        loss=dict(type='CrossEntropyLoss', loss_weight=1.0)))
dataset_type = 'CIFAR10'
img_norm_cfg = dict(
    mean=[125.307, 122.961, 113.8575],
    std=[51.5865, 50.847, 51.255],
    to_rgb=False)
train_pipeline = [
    dict(type='RandomCrop', size=32, padding=4),
    dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
    dict(
        type='Normalize',
        mean=[125.307, 122.961, 113.8575],
        std=[51.5865, 50.847, 51.255],
        to_rgb=False),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='ToTensor', keys=['gt_label']),
    dict(type='Collect', keys=['img', 'gt_label'])
]
test_pipeline = [
    dict(
        type='Normalize',
        mean=[125.307, 122.961, 113.8575],
        std=[51.5865, 50.847, 51.255],
        to_rgb=False),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='Collect', keys=['img'])
]
data = dict(
    samples_per_gpu=256,
    workers_per_gpu=2,
    train=dict(
        type='CIFAR10',
        data_prefix='data/CIFAR-10',
        pipeline=[
            dict(type='RandomCrop', size=32, padding=4),
            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
            dict(
                type='Normalize',
                mean=[125.307, 122.961, 113.8575],
                std=[51.5865, 50.847, 51.255],
                to_rgb=False),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='ToTensor', keys=['gt_label']),
            dict(type='Collect', keys=['img', 'gt_label'])
        ]),
    val=dict(
        type='CIFAR10',
        data_prefix='data/CIFAR-10',
        pipeline=[
            dict(
                type='Normalize',
                mean=[125.307, 122.961, 113.8575],
                std=[51.5865, 50.847, 51.255],
                to_rgb=False),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ],
        test_mode=True),
    test=dict(
        type='CIFAR10',
        data_prefix='data/cifar10',
        pipeline=[
            dict(
                type='Normalize',
                mean=[125.307, 122.961, 113.8575],
                std=[51.5865, 50.847, 51.255],
                to_rgb=False),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ],
        test_mode=True))
optimizer = dict(
    type='SGD',
    lr=7e-05,
    momentum=0.9,
    weight_decay=0.0003,
    paramwise_cfg=dict(norm_decay_mult=0))
optimizer_config = dict(grad_clip=None)
lr_config = dict(policy='CosineAnnealing', min_lr=0, by_epoch=False)
runner = dict(type='EpochBasedRunner', max_epochs=20)
checkpoint_config = dict(interval=1)
log_config = dict(interval=150, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = './checkpoints/resnet18_b16x8_cifar10_20210528-bd6371c8.pth'
resume_from = None
workflow = [('train', 4), ('val', 1)]
evaluation = dict(
    interval=5,
    metric='accuracy',
    metric_options=dict(topk=(1, )),
    save_best='auto')
work_dir = 'work_dir'
gpu_ids = [0]

2023-02-05 16:40:51,208 - mmcls - INFO - Set random seed to 153998021, deterministic: False
2023-02-05 16:40:53,401 - mmcls - INFO - load checkpoint from local path: ./checkpoints/resnet18_b16x8_cifar10_20210528-bd6371c8.pth
2023-02-05 16:40:53,471 - mmcls - INFO - Start running, host: scz0bdh@g0098, work_dir: /data/run01/scz0bdh/mmlab_homework/cifar10/work_dir
2023-02-05 16:40:53,472 - mmcls - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) CosineAnnealingLrUpdaterHook       
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) CosineAnnealingLrUpdaterHook       
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) CosineAnnealingLrUpdaterHook       
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2023-02-05 16:40:53,472 - mmcls - INFO - workflow: [('train', 4), ('val', 1)], max: 20 epochs
2023-02-05 16:40:53,472 - mmcls - INFO - Checkpoints will be saved to /data/run01/scz0bdh/mmlab_homework/cifar10/work_dir by HardDiskBackend.
2023-02-05 16:41:00,891 - mmcls - INFO - Epoch [1][150/196]	lr: 6.975e-05, eta: 0:03:06, time: 0.049, data_time: 0.016, memory: 429, loss: 0.0006
2023-02-05 16:41:01,677 - mmcls - INFO - Saving checkpoint at 1 epochs
2023-02-05 16:41:06,450 - mmcls - INFO - Epoch [2][150/196]	lr: 6.867e-05, eta: 0:02:05, time: 0.031, data_time: 0.014, memory: 429, loss: 0.0006
2023-02-05 16:41:07,233 - mmcls - INFO - Saving checkpoint at 2 epochs
2023-02-05 16:41:11,945 - mmcls - INFO - Epoch [3][150/196]	lr: 6.676e-05, eta: 0:01:44, time: 0.031, data_time: 0.014, memory: 429, loss: 0.0005
2023-02-05 16:41:12,729 - mmcls - INFO - Saving checkpoint at 3 epochs
2023-02-05 16:41:17,449 - mmcls - INFO - Epoch [4][150/196]	lr: 6.407e-05, eta: 0:01:32, time: 0.031, data_time: 0.014, memory: 429, loss: 0.0006
2023-02-05 16:41:18,233 - mmcls - INFO - Saving checkpoint at 4 epochs
2023-02-05 16:41:21,151 - mmcls - INFO - Epoch(val) [4][40]	loss: 0.2243
2023-02-05 16:41:25,858 - mmcls - INFO - Epoch [5][150/196]	lr: 6.066e-05, eta: 0:01:23, time: 0.031, data_time: 0.014, memory: 429, loss: 0.0005
2023-02-05 16:41:26,637 - mmcls - INFO - Saving checkpoint at 5 epochs
2023-02-05 16:41:27,687 - mmcls - INFO - Now best checkpoint is saved as best_accuracy_top-1_epoch_5.pth.
2023-02-05 16:41:27,688 - mmcls - INFO - Best accuracy_top-1 is 94.8200 at 5 epoch.
2023-02-05 16:41:27,688 - mmcls - INFO - Epoch(val) [5][40]	accuracy_top-1: 94.8200
2023-02-05 16:41:32,377 - mmcls - INFO - Epoch [6][150/196]	lr: 5.662e-05, eta: 0:01:16, time: 0.031, data_time: 0.014, memory: 429, loss: 0.0005
2023-02-05 16:41:33,163 - mmcls - INFO - Saving checkpoint at 6 epochs
2023-02-05 16:41:37,943 - mmcls - INFO - Epoch [7][150/196]	lr: 5.205e-05, eta: 0:01:09, time: 0.031, data_time: 0.014, memory: 429, loss: 0.0005
2023-02-05 16:41:38,722 - mmcls - INFO - Saving checkpoint at 7 epochs
2023-02-05 16:41:43,450 - mmcls - INFO - Epoch [8][150/196]	lr: 4.706e-05, eta: 0:01:03, time: 0.031, data_time: 0.014, memory: 429, loss: 0.0005
2023-02-05 16:41:44,231 - mmcls - INFO - Saving checkpoint at 8 epochs
2023-02-05 16:41:47,004 - mmcls - INFO - Epoch(val) [8][40]	loss: 0.2235
2023-02-05 16:41:51,721 - mmcls - INFO - Epoch [9][150/196]	lr: 4.177e-05, eta: 0:00:57, time: 0.031, data_time: 0.014, memory: 429, loss: 0.0005
2023-02-05 16:41:52,544 - mmcls - INFO - Saving checkpoint at 9 epochs
2023-02-05 16:41:57,321 - mmcls - INFO - Epoch [10][150/196]	lr: 3.632e-05, eta: 0:00:51, time: 0.031, data_time: 0.014, memory: 429, loss: 0.0005
2023-02-05 16:41:58,230 - mmcls - INFO - Saving checkpoint at 10 epochs
2023-02-05 16:41:59,171 - mmcls - INFO - Epoch(val) [10][40]	accuracy_top-1: 94.8200
2023-02-05 16:42:03,806 - mmcls - INFO - Epoch [11][150/196]	lr: 3.083e-05, eta: 0:00:46, time: 0.031, data_time: 0.014, memory: 429, loss: 0.0006
2023-02-05 16:42:04,592 - mmcls - INFO - Saving checkpoint at 11 epochs
2023-02-05 16:42:09,317 - mmcls - INFO - Epoch [12][150/196]	lr: 2.545e-05, eta: 0:00:41, time: 0.031, data_time: 0.014, memory: 429, loss: 0.0006
2023-02-05 16:42:10,099 - mmcls - INFO - Saving checkpoint at 12 epochs
2023-02-05 16:42:12,953 - mmcls - INFO - Epoch(val) [12][40]	loss: 0.2244
2023-02-05 16:42:17,657 - mmcls - INFO - Epoch [13][150/196]	lr: 2.030e-05, eta: 0:00:36, time: 0.031, data_time: 0.014, memory: 429, loss: 0.0005
2023-02-05 16:42:18,460 - mmcls - INFO - Saving checkpoint at 13 epochs
2023-02-05 16:42:23,205 - mmcls - INFO - Epoch [14][150/196]	lr: 1.551e-05, eta: 0:00:30, time: 0.031, data_time: 0.014, memory: 429, loss: 0.0007
2023-02-05 16:42:23,988 - mmcls - INFO - Saving checkpoint at 14 epochs
2023-02-05 16:42:28,796 - mmcls - INFO - Epoch [15][150/196]	lr: 1.120e-05, eta: 0:00:25, time: 0.032, data_time: 0.014, memory: 429, loss: 0.0005
2023-02-05 16:42:29,578 - mmcls - INFO - Saving checkpoint at 15 epochs
2023-02-05 16:42:30,517 - mmcls - INFO - Epoch(val) [15][40]	accuracy_top-1: 94.8200
2023-02-05 16:42:35,195 - mmcls - INFO - Epoch [16][150/196]	lr: 7.479e-06, eta: 0:00:20, time: 0.031, data_time: 0.014, memory: 429, loss: 0.0005
2023-02-05 16:42:35,986 - mmcls - INFO - Saving checkpoint at 16 epochs
2023-02-05 16:42:38,802 - mmcls - INFO - Epoch(val) [16][40]	loss: 0.2211
2023-02-05 16:42:43,485 - mmcls - INFO - Epoch [17][150/196]	lr: 4.435e-06, eta: 0:00:15, time: 0.031, data_time: 0.014, memory: 429, loss: 0.0005
2023-02-05 16:42:44,267 - mmcls - INFO - Saving checkpoint at 17 epochs
2023-02-05 16:42:49,033 - mmcls - INFO - Epoch [18][150/196]	lr: 2.144e-06, eta: 0:00:10, time: 0.031, data_time: 0.014, memory: 429, loss: 0.0005
2023-02-05 16:42:49,822 - mmcls - INFO - Saving checkpoint at 18 epochs
2023-02-05 16:42:54,571 - mmcls - INFO - Epoch [19][150/196]	lr: 6.616e-07, eta: 0:00:06, time: 0.031, data_time: 0.014, memory: 429, loss: 0.0005
2023-02-05 16:42:55,359 - mmcls - INFO - Saving checkpoint at 19 epochs
2023-02-05 16:43:00,146 - mmcls - INFO - Epoch [20][150/196]	lr: 2.483e-08, eta: 0:00:01, time: 0.031, data_time: 0.014, memory: 429, loss: 0.0005
2023-02-05 16:43:00,941 - mmcls - INFO - Saving checkpoint at 20 epochs
2023-02-05 16:43:01,887 - mmcls - INFO - Epoch(val) [20][40]	accuracy_top-1: 94.8200
2023-02-05 16:43:04,594 - mmcls - INFO - Epoch(val) [20][40]	loss: 0.2209
