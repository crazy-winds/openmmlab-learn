2023/06/14 06:55:03 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.9.16 (main, Mar  8 2023, 14:00:05) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 722739775
    GPU 0,1: NVIDIA GeForce RTX 3060 Ti
    CUDA_HOME: /usr/local/cuda-11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.64
    GCC: gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0
    PyTorch: 2.0.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.15.2
    OpenCV: 4.7.0
    MMEngine: 0.7.3

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: None
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2023/06/14 06:55:03 - mmengine - INFO - Config:
norm_cfg = dict(type='SyncBN', requires_grad=True)
data_preprocessor = dict(
    type='SegDataPreProcessor',
    mean=[123.675, 116.28, 103.53],
    std=[58.395, 57.12, 57.375],
    bgr_to_rgb=True,
    pad_val=0,
    seg_pad_val=255,
    size=(512, 1024))
model = dict(
    type='EncoderDecoder',
    data_preprocessor=dict(
        type='SegDataPreProcessor',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        bgr_to_rgb=True,
        pad_val=0,
        seg_pad_val=255,
        size=(512, 1024)),
    pretrained='open-mmlab://resnet18_v1c',
    backbone=dict(
        type='ResNetV1c',
        depth=18,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        dilations=(1, 1, 2, 4),
        strides=(1, 2, 1, 1),
        norm_cfg=dict(type='SyncBN', requires_grad=True),
        norm_eval=False,
        style='pytorch',
        contract_dilation=True),
    decode_head=dict(
        type='PSPHead',
        in_channels=512,
        in_index=3,
        channels=128,
        pool_scales=(1, 2, 3, 6),
        dropout_ratio=0.1,
        num_classes=6,
        norm_cfg=dict(type='SyncBN', requires_grad=True),
        align_corners=False,
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
    auxiliary_head=dict(
        type='FCNHead',
        in_channels=256,
        in_index=2,
        channels=64,
        num_convs=1,
        concat_input=False,
        dropout_ratio=0.1,
        num_classes=6,
        norm_cfg=dict(type='SyncBN', requires_grad=True),
        align_corners=False,
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=0.4)),
    train_cfg=dict(),
    test_cfg=dict(mode='whole'))
dataset_type = 'CityscapesDataset'
data_root = 'data/cityscapes/'
crop_size = (512, 1024)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations'),
    dict(
        type='RandomResize',
        scale=(1024, 512),
        ratio_range=(0.5, 2.0),
        keep_ratio=True),
    dict(type='RandomCrop', crop_size=(384, 512), cat_max_ratio=0.75),
    dict(type='RandomFlip', prob=0.5),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs')
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='Resize', scale=(2048, 1024), keep_ratio=True),
    dict(type='LoadAnnotations'),
    dict(type='PackSegInputs')
]
img_ratios = [0.5, 0.75, 1.0, 1.25, 1.5, 1.75]
tta_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(
        type='TestTimeAug',
        transforms=[[{
            'type': 'Resize',
            'scale_factor': 0.5,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 0.75,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.0,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.25,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.5,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.75,
            'keep_ratio': True
        }],
                    [{
                        'type': 'RandomFlip',
                        'prob': 0.0,
                        'direction': 'horizontal'
                    }, {
                        'type': 'RandomFlip',
                        'prob': 1.0,
                        'direction': 'horizontal'
                    }], [{
                        'type': 'LoadAnnotations'
                    }], [{
                        'type': 'PackSegInputs'
                    }]])
]
train_dataloader = dict(
    batch_size=6,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=True),
    dataset=dict(
        type='BaseSegDataset',
        data_root='data/Watermelon87_Semantic_Seg_Mask/',
        data_prefix=dict(
            img_path='img_dir/train/', seg_map_path='ann_dir/train/'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations'),
            dict(
                type='RandomResize',
                scale=(1024, 512),
                ratio_range=(0.5, 2.0),
                keep_ratio=True),
            dict(type='RandomCrop', crop_size=(384, 512), cat_max_ratio=0.75),
            dict(type='RandomFlip', prob=0.5),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs')
        ],
        metainfo=dict(
            classes=('red', 'green', 'white', 'seed-black', 'seed-white'),
            palette=[[120, 120, 120], [180, 120, 120], [6, 230, 230],
                     [80, 50, 50], [4, 200, 3]])))
val_dataloader = dict(
    batch_size=1,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='BaseSegDataset',
        data_root='data/Watermelon87_Semantic_Seg_Mask/',
        data_prefix=dict(img_path='img_dir/val/', seg_map_path='ann_dir/val/'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', scale=(1024, 512), keep_ratio=True),
            dict(type='LoadAnnotations'),
            dict(type='PackSegInputs')
        ],
        metainfo=dict(
            classes=('red', 'green', 'white', 'seed-black', 'seed-white'),
            palette=[[120, 120, 120], [180, 120, 120], [6, 230, 230],
                     [80, 50, 50], [4, 200, 3]])))
test_dataloader = dict(
    batch_size=1,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='CityscapesDataset',
        data_root='data/cityscapes/',
        data_prefix=dict(
            img_path='leftImg8bit/val', seg_map_path='gtFine/val'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', scale=(2048, 1024), keep_ratio=True),
            dict(type='LoadAnnotations'),
            dict(type='PackSegInputs')
        ]))
val_evaluator = dict(type='IoUMetric', iou_metrics=['mIoU'])
test_evaluator = dict(type='IoUMetric', iou_metrics=['mIoU'])
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0),
    dist_cfg=dict(backend='nccl'))
vis_backends = [dict(type='LocalVisBackend')]
visualizer = dict(
    type='SegLocalVisualizer',
    vis_backends=[dict(type='LocalVisBackend')],
    name='visualizer')
log_processor = dict(by_epoch=False)
log_level = 'INFO'
load_from = 'checkpoint/pspnet_r18-d8_512x1024_80k_cityscapes_20201225_021458-09ffa746.pth'
resume = False
tta_model = dict(type='SegTTAModel')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)
optim_wrapper = dict(
    type='OptimWrapper',
    optimizer=dict(type='AdamW', lr=0.0003, weight_decay=0.0003),
    clip_grad=None,
    paramwise_cfg=dict(
        norm_decay_mult=0, bias_decay_mult=0, bypass_duplicate=True))
param_scheduler = [
    dict(type='LinearLR', start_factor=0.0001, by_epoch=True, begin=0, end=10),
    dict(
        type='CosineAnnealingLR',
        eta_min=1e-05,
        begin=10,
        end=50,
        T_max=50,
        by_epoch=True,
        convert_to_iter_based=True)
]
train_cfg = dict(type='EpochBasedTrainLoop', max_epochs=50, val_interval=5)
val_cfg = dict(type='ValLoop')
test_cfg = dict(type='TestLoop')
default_hooks = dict(
    timer=dict(type='IterTimerHook'),
    logger=dict(type='LoggerHook', interval=50, log_metric_by_epoch=False),
    param_scheduler=dict(type='ParamSchedulerHook'),
    checkpoint=dict(
        type='CheckpointHook', by_epoch=True, interval=10, max_keep_ckpts=3),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    visualization=dict(type='SegVisualizationHook'))
NUM_CLASSES = 6
metainfo = dict(
    classes=('red', 'green', 'white', 'seed-black', 'seed-white'),
    palette=[[120, 120, 120], [180, 120, 120], [6, 230, 230], [80, 50, 50],
             [4, 200, 3]])
val_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='Resize', scale=(1024, 512), keep_ratio=True),
    dict(type='LoadAnnotations'),
    dict(type='PackSegInputs')
]
stage2_num_epochs = 5
work_dir = 'work_dir'
launcher = 'none'

2023/06/14 06:55:05 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2023/06/14 06:55:05 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train:
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.stem.1.weight:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.stem.1.bias:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.stem.4.weight:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.stem.4.bias:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.stem.7.weight:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.stem.7.bias:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer1.0.bn1.weight:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer1.0.bn1.bias:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer1.0.bn2.weight:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer1.0.bn2.bias:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer1.1.bn1.weight:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer1.1.bn1.bias:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer1.1.bn2.weight:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer1.1.bn2.bias:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer2.0.bn1.weight:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer2.0.bn1.bias:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer2.0.bn2.weight:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer2.0.bn2.bias:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer2.0.downsample.1.weight:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer2.0.downsample.1.bias:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer2.1.bn1.weight:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer2.1.bn1.bias:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer2.1.bn2.weight:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer2.1.bn2.bias:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer3.0.bn1.weight:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer3.0.bn1.bias:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer3.0.bn2.weight:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer3.0.bn2.bias:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer3.0.downsample.1.weight:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer3.0.downsample.1.bias:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer3.1.bn1.weight:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer3.1.bn1.bias:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer3.1.bn2.weight:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer3.1.bn2.bias:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer4.0.bn1.weight:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer4.0.bn1.bias:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer4.0.bn2.weight:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer4.0.bn2.bias:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer4.0.downsample.1.weight:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer4.0.downsample.1.bias:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer4.1.bn1.weight:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer4.1.bn1.bias:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer4.1.bn2.weight:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- backbone.layer4.1.bn2.bias:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- decode_head.conv_seg.bias:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- decode_head.psp_modules.0.1.bn.weight:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- decode_head.psp_modules.0.1.bn.bias:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- decode_head.psp_modules.1.1.bn.weight:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- decode_head.psp_modules.1.1.bn.bias:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- decode_head.psp_modules.2.1.bn.weight:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- decode_head.psp_modules.2.1.bn.bias:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- decode_head.psp_modules.3.1.bn.weight:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- decode_head.psp_modules.3.1.bn.bias:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- decode_head.bottleneck.bn.weight:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- decode_head.bottleneck.bn.bias:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- auxiliary_head.conv_seg.bias:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- auxiliary_head.convs.0.bn.weight:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - INFO - paramwise_options -- auxiliary_head.convs.0.bn.bias:weight_decay=0.0
2023/06/14 06:55:05 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
2023/06/14 06:55:05 - mmengine - INFO - load model from: open-mmlab://resnet18_v1c
2023/06/14 06:55:05 - mmengine - INFO - Loads checkpoint by openmmlab backend from path: open-mmlab://resnet18_v1c
2023/06/14 06:55:05 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

Name of parameter - Initialization information

backbone.stem.0.weight - torch.Size([32, 3, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.stem.1.weight - torch.Size([32]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.stem.1.bias - torch.Size([32]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.stem.3.weight - torch.Size([32, 32, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.stem.4.weight - torch.Size([32]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.stem.4.bias - torch.Size([32]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.stem.6.weight - torch.Size([64, 32, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.stem.7.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.stem.7.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer1.0.bn1.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer1.0.bn2.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer1.1.conv1.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer1.1.bn1.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer1.1.bn2.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer2.0.conv1.weight - torch.Size([128, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer2.0.bn1.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer2.0.bn2.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer2.0.downsample.0.weight - torch.Size([128, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer2.0.downsample.1.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer2.0.downsample.1.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer2.1.conv1.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer2.1.bn1.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer2.1.bn2.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer3.0.conv1.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer3.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer3.0.bn2.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer3.0.downsample.0.weight - torch.Size([256, 128, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer3.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer3.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer3.1.conv1.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer3.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer3.1.bn2.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer4.0.conv1.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer4.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer4.0.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer4.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer4.0.downsample.1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer4.0.downsample.1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer4.1.conv1.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer4.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

backbone.layer4.1.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet18_v1c 

decode_head.conv_seg.weight - torch.Size([6, 128, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.conv_seg.bias - torch.Size([6]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.psp_modules.0.1.conv.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.0.1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.0.1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.1.1.conv.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.1.1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.1.1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.2.1.conv.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.2.1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.2.1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.3.1.conv.weight - torch.Size([128, 512, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.3.1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.3.1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.bottleneck.conv.weight - torch.Size([128, 1024, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.bottleneck.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.bottleneck.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.conv_seg.weight - torch.Size([6, 64, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

auxiliary_head.conv_seg.bias - torch.Size([6]): 
NormalInit: mean=0, std=0.01, bias=0 

auxiliary_head.convs.0.conv.weight - torch.Size([64, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.convs.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.convs.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  
2023/06/14 06:55:05 - mmengine - INFO - Load checkpoint from checkpoint/pspnet_r18-d8_512x1024_80k_cityscapes_20201225_021458-09ffa746.pth
2023/06/14 06:55:05 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2023/06/14 06:55:05 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2023/06/14 06:55:05 - mmengine - INFO - Checkpoints will be saved to /home/zhy/mmlab lear/Watermelon_seg/work_dir.
2023/06/14 06:55:19 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:55:19 - mmengine - INFO - Iter(train) [  8/400]  lr: 3.0000e-08  eta: 0:11:04  time: 1.6952  data_time: 0.0573  memory: 6118  loss: 0.9438  decode.loss_ce: 0.6712  decode.acc_seg: 11.9855  aux.loss_ce: 0.2725  aux.acc_seg: 5.4761
2023/06/14 06:55:23 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:55:23 - mmengine - INFO - Iter(train) [ 16/400]  lr: 3.3360e-05  eta: 0:07:05  time: 0.8911  data_time: 0.0537  memory: 3982  loss: 0.8937  decode.loss_ce: 0.6315  decode.acc_seg: 62.4599  aux.loss_ce: 0.2622  aux.acc_seg: 18.2035
2023/06/14 06:55:27 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:55:27 - mmengine - INFO - Iter(train) [ 24/400]  lr: 6.6690e-05  eta: 0:05:38  time: 0.4722  data_time: 0.0241  memory: 3982  loss: 0.8251  decode.loss_ce: 0.5736  decode.acc_seg: 81.3881  aux.loss_ce: 0.2515  aux.acc_seg: 64.4749
2023/06/14 06:55:31 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:55:31 - mmengine - INFO - Iter(train) [ 32/400]  lr: 1.0002e-04  eta: 0:04:52  time: 0.4729  data_time: 0.0246  memory: 3982  loss: 0.7418  decode.loss_ce: 0.5024  decode.acc_seg: 81.7895  aux.loss_ce: 0.2394  aux.acc_seg: 82.4485
2023/06/14 06:55:35 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:55:35 - mmengine - INFO - Iter(train) [ 40/400]  lr: 1.3335e-04  eta: 0:04:23  time: 0.4705  data_time: 0.0225  memory: 3982  loss: 0.6488  decode.loss_ce: 0.4328  decode.acc_seg: 91.6858  aux.loss_ce: 0.2160  aux.acc_seg: 90.8116
2023/06/14 06:55:37 - mmengine - INFO - per class results:
2023/06/14 06:55:37 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    red     | 83.42 |  86.8 |
|   green    | 74.58 | 95.96 |
|   white    | 29.69 | 29.88 |
| seed-black | 37.29 | 71.66 |
| seed-white |  0.0  |  0.0  |
+------------+-------+-------+
2023/06/14 06:55:37 - mmengine - INFO - Iter(val) [11/11]    aAcc: 83.8000  mIoU: 45.0000  mAcc: 56.8600  data_time: 0.0163  time: 0.1649
2023/06/14 06:55:40 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:55:40 - mmengine - INFO - Iter(train) [ 48/400]  lr: 1.6668e-04  eta: 0:04:02  time: 0.4660  data_time: 0.0194  memory: 4423  loss: 0.6057  decode.loss_ce: 0.3997  decode.acc_seg: 93.0965  aux.loss_ce: 0.2061  aux.acc_seg: 93.9184
2023/06/14 06:55:44 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:55:44 - mmengine - INFO - Iter(train) [ 56/400]  lr: 2.0001e-04  eta: 0:03:47  time: 0.4756  data_time: 0.0311  memory: 3982  loss: 0.5398  decode.loss_ce: 0.3479  decode.acc_seg: 81.1699  aux.loss_ce: 0.1919  aux.acc_seg: 80.6353
2023/06/14 06:55:48 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:55:48 - mmengine - INFO - Iter(train) [ 64/400]  lr: 2.3334e-04  eta: 0:03:34  time: 0.4634  data_time: 0.0196  memory: 3982  loss: 0.4726  decode.loss_ce: 0.2989  decode.acc_seg: 87.3623  aux.loss_ce: 0.1737  aux.acc_seg: 83.8195
2023/06/14 06:55:52 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:55:52 - mmengine - INFO - Iter(train) [ 72/400]  lr: 2.6667e-04  eta: 0:03:23  time: 0.4701  data_time: 0.0271  memory: 3982  loss: 0.4290  decode.loss_ce: 0.2690  decode.acc_seg: 86.8762  aux.loss_ce: 0.1600  aux.acc_seg: 87.7971
2023/06/14 06:55:56 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:55:56 - mmengine - INFO - Iter(train) [ 80/400]  lr: 3.0000e-04  eta: 0:03:13  time: 0.4633  data_time: 0.0219  memory: 3982  loss: 0.3745  decode.loss_ce: 0.2355  decode.acc_seg: 84.9109  aux.loss_ce: 0.1389  aux.acc_seg: 84.2445
2023/06/14 06:55:56 - mmengine - INFO - Saving checkpoint at 10 epochs
2023/06/14 06:55:56 - mmengine - INFO - per class results:
2023/06/14 06:55:56 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    red     | 88.01 | 92.66 |
|   green    | 79.62 | 96.86 |
|   white    | 54.96 | 55.63 |
| seed-black | 56.88 | 72.52 |
| seed-white |  0.0  |  0.0  |
+------------+-------+-------+
2023/06/14 06:55:56 - mmengine - INFO - Iter(val) [11/11]    aAcc: 89.3300  mIoU: 55.9000  mAcc: 63.5400  data_time: 0.0034  time: 0.0174
2023/06/14 06:56:00 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:56:00 - mmengine - INFO - Iter(train) [ 88/400]  lr: 2.9978e-04  eta: 0:03:05  time: 0.4619  data_time: 0.0209  memory: 3982  loss: 0.3575  decode.loss_ce: 0.2232  decode.acc_seg: 93.6084  aux.loss_ce: 0.1343  aux.acc_seg: 92.4927
2023/06/14 06:56:04 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:56:04 - mmengine - INFO - Iter(train) [ 96/400]  lr: 2.9899e-04  eta: 0:02:57  time: 0.4597  data_time: 0.0190  memory: 3982  loss: 0.3019  decode.loss_ce: 0.1859  decode.acc_seg: 88.0302  aux.loss_ce: 0.1160  aux.acc_seg: 88.2009
2023/06/14 06:56:08 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:56:08 - mmengine - INFO - Iter(train) [104/400]  lr: 2.9764e-04  eta: 0:02:49  time: 0.4524  data_time: 0.0113  memory: 3982  loss: 0.2941  decode.loss_ce: 0.1852  decode.acc_seg: 91.3624  aux.loss_ce: 0.1090  aux.acc_seg: 88.2767
2023/06/14 06:56:11 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:56:11 - mmengine - INFO - Iter(train) [112/400]  lr: 2.9572e-04  eta: 0:02:43  time: 0.4659  data_time: 0.0247  memory: 3982  loss: 0.2559  decode.loss_ce: 0.1577  decode.acc_seg: 87.3991  aux.loss_ce: 0.0982  aux.acc_seg: 86.9449
2023/06/14 06:56:15 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:56:15 - mmengine - INFO - Iter(train) [120/400]  lr: 2.9325e-04  eta: 0:02:37  time: 0.4641  data_time: 0.0217  memory: 3982  loss: 0.2458  decode.loss_ce: 0.1559  decode.acc_seg: 85.6402  aux.loss_ce: 0.0899  aux.acc_seg: 84.1047
2023/06/14 06:56:15 - mmengine - INFO - per class results:
2023/06/14 06:56:15 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    red     | 82.72 | 85.42 |
|   green    | 85.46 |  99.7 |
|   white    | 47.76 | 78.25 |
| seed-black |  49.7 | 67.39 |
| seed-white |  0.0  |  0.0  |
+------------+-------+-------+
2023/06/14 06:56:15 - mmengine - INFO - Iter(val) [11/11]    aAcc: 87.0100  mIoU: 53.1300  mAcc: 66.1500  data_time: 0.0033  time: 0.0173
2023/06/14 06:56:19 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:56:19 - mmengine - INFO - Iter(train) [128/400]  lr: 2.9023e-04  eta: 0:02:30  time: 0.4601  data_time: 0.0187  memory: 3981  loss: 0.2204  decode.loss_ce: 0.1399  decode.acc_seg: 93.8183  aux.loss_ce: 0.0805  aux.acc_seg: 92.9151
2023/06/14 06:56:23 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:56:23 - mmengine - INFO - Iter(train) [136/400]  lr: 2.8668e-04  eta: 0:02:25  time: 0.4619  data_time: 0.0219  memory: 3982  loss: 0.2170  decode.loss_ce: 0.1392  decode.acc_seg: 80.8784  aux.loss_ce: 0.0777  aux.acc_seg: 79.2432
2023/06/14 06:56:27 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:56:27 - mmengine - INFO - Iter(train) [144/400]  lr: 2.8261e-04  eta: 0:02:19  time: 0.4571  data_time: 0.0178  memory: 3982  loss: 0.2029  decode.loss_ce: 0.1318  decode.acc_seg: 92.6423  aux.loss_ce: 0.0711  aux.acc_seg: 89.1884
2023/06/14 06:56:31 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:56:31 - mmengine - INFO - Iter(train) [152/400]  lr: 2.7803e-04  eta: 0:02:14  time: 0.4619  data_time: 0.0206  memory: 3982  loss: 0.2068  decode.loss_ce: 0.1344  decode.acc_seg: 92.3327  aux.loss_ce: 0.0725  aux.acc_seg: 89.5729
2023/06/14 06:56:35 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:56:35 - mmengine - INFO - Iter(train) [160/400]  lr: 2.7297e-04  eta: 0:02:09  time: 0.4918  data_time: 0.0526  memory: 3982  loss: 0.1766  decode.loss_ce: 0.1140  decode.acc_seg: 85.4258  aux.loss_ce: 0.0627  aux.acc_seg: 83.6230
2023/06/14 06:56:35 - mmengine - INFO - Saving checkpoint at 20 epochs
2023/06/14 06:56:35 - mmengine - INFO - per class results:
2023/06/14 06:56:35 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    red     | 53.81 | 54.45 |
|   green    |  90.5 | 98.02 |
|   white    | 21.26 | 96.27 |
| seed-black | 58.09 |  80.7 |
| seed-white |  0.2  |  0.2  |
+------------+-------+-------+
2023/06/14 06:56:35 - mmengine - INFO - Iter(val) [11/11]    aAcc: 70.4100  mIoU: 44.7700  mAcc: 65.9300  data_time: 0.0034  time: 0.0173
2023/06/14 06:56:39 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:56:39 - mmengine - INFO - Iter(train) [168/400]  lr: 2.6745e-04  eta: 0:02:04  time: 0.4556  data_time: 0.0172  memory: 3982  loss: 0.1715  decode.loss_ce: 0.1111  decode.acc_seg: 90.3825  aux.loss_ce: 0.0604  aux.acc_seg: 87.9587
2023/06/14 06:56:43 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:56:43 - mmengine - INFO - Iter(train) [176/400]  lr: 2.6148e-04  eta: 0:01:59  time: 0.4691  data_time: 0.0282  memory: 3982  loss: 0.1711  decode.loss_ce: 0.1123  decode.acc_seg: 84.5498  aux.loss_ce: 0.0588  aux.acc_seg: 82.9877
2023/06/14 06:56:47 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:56:47 - mmengine - INFO - Iter(train) [184/400]  lr: 2.5509e-04  eta: 0:01:54  time: 0.4605  data_time: 0.0205  memory: 3982  loss: 0.1842  decode.loss_ce: 0.1231  decode.acc_seg: 84.2961  aux.loss_ce: 0.0611  aux.acc_seg: 83.7542
2023/06/14 06:56:50 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:56:50 - mmengine - INFO - Iter(train) [192/400]  lr: 2.4830e-04  eta: 0:01:50  time: 0.4618  data_time: 0.0200  memory: 3982  loss: 0.1637  decode.loss_ce: 0.1076  decode.acc_seg: 91.4226  aux.loss_ce: 0.0561  aux.acc_seg: 90.2232
2023/06/14 06:56:54 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:56:54 - mmengine - INFO - Iter(train) [200/400]  lr: 2.4115e-04  eta: 0:01:45  time: 0.4579  data_time: 0.0165  memory: 3981  loss: 0.1634  decode.loss_ce: 0.1084  decode.acc_seg: 92.1231  aux.loss_ce: 0.0550  aux.acc_seg: 91.2233
2023/06/14 06:56:54 - mmengine - INFO - per class results:
2023/06/14 06:56:54 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    red     | 57.96 | 58.38 |
|   green    | 83.26 | 92.67 |
|   white    |  22.9 | 96.08 |
| seed-black | 55.76 |  83.0 |
| seed-white |  4.51 |  4.51 |
+------------+-------+-------+
2023/06/14 06:56:54 - mmengine - INFO - Iter(val) [11/11]    aAcc: 71.4800  mIoU: 44.8800  mAcc: 66.9300  data_time: 0.0033  time: 0.0173
2023/06/14 06:56:58 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:56:58 - mmengine - INFO - Iter(train) [208/400]  lr: 2.3365e-04  eta: 0:01:40  time: 0.4664  data_time: 0.0267  memory: 3982  loss: 0.1631  decode.loss_ce: 0.1084  decode.acc_seg: 94.6949  aux.loss_ce: 0.0547  aux.acc_seg: 93.8670
2023/06/14 06:57:02 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:57:02 - mmengine - INFO - Iter(train) [216/400]  lr: 2.2585e-04  eta: 0:01:36  time: 0.4647  data_time: 0.0230  memory: 3982  loss: 0.1316  decode.loss_ce: 0.0866  decode.acc_seg: 95.8940  aux.loss_ce: 0.0451  aux.acc_seg: 94.9475
2023/06/14 06:57:06 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:57:06 - mmengine - INFO - Iter(train) [224/400]  lr: 2.1777e-04  eta: 0:01:31  time: 0.4637  data_time: 0.0208  memory: 3982  loss: 0.1411  decode.loss_ce: 0.0926  decode.acc_seg: 89.8613  aux.loss_ce: 0.0485  aux.acc_seg: 89.9774
2023/06/14 06:57:10 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:57:10 - mmengine - INFO - Iter(train) [232/400]  lr: 2.0944e-04  eta: 0:01:27  time: 0.4615  data_time: 0.0205  memory: 3982  loss: 0.1342  decode.loss_ce: 0.0891  decode.acc_seg: 93.7903  aux.loss_ce: 0.0450  aux.acc_seg: 93.6006
2023/06/14 06:57:14 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:57:14 - mmengine - INFO - Iter(train) [240/400]  lr: 2.0089e-04  eta: 0:01:23  time: 0.4927  data_time: 0.0521  memory: 3982  loss: 0.1354  decode.loss_ce: 0.0896  decode.acc_seg: 95.9055  aux.loss_ce: 0.0457  aux.acc_seg: 95.1837
2023/06/14 06:57:14 - mmengine - INFO - Saving checkpoint at 30 epochs
2023/06/14 06:57:14 - mmengine - INFO - per class results:
2023/06/14 06:57:14 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    red     | 76.45 | 77.54 |
|   green    | 87.54 | 99.23 |
|   white    | 35.59 | 90.23 |
| seed-black | 72.47 | 81.92 |
| seed-white | 19.38 | 25.36 |
+------------+-------+-------+
2023/06/14 06:57:14 - mmengine - INFO - Iter(val) [11/11]    aAcc: 84.1900  mIoU: 58.2900  mAcc: 74.8600  data_time: 0.0034  time: 0.0176
2023/06/14 06:57:18 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:57:18 - mmengine - INFO - Iter(train) [248/400]  lr: 1.9216e-04  eta: 0:01:18  time: 0.4510  data_time: 0.0094  memory: 3982  loss: 0.1292  decode.loss_ce: 0.0854  decode.acc_seg: 96.4668  aux.loss_ce: 0.0438  aux.acc_seg: 95.2804
2023/06/14 06:57:22 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:57:22 - mmengine - INFO - Iter(train) [256/400]  lr: 1.8329e-04  eta: 0:01:14  time: 0.4630  data_time: 0.0201  memory: 3982  loss: 0.1112  decode.loss_ce: 0.0719  decode.acc_seg: 95.7937  aux.loss_ce: 0.0393  aux.acc_seg: 94.2543
2023/06/14 06:57:25 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:57:25 - mmengine - INFO - Iter(train) [264/400]  lr: 1.7430e-04  eta: 0:01:09  time: 0.4603  data_time: 0.0175  memory: 3982  loss: 0.1232  decode.loss_ce: 0.0808  decode.acc_seg: 95.7516  aux.loss_ce: 0.0424  aux.acc_seg: 94.9097
2023/06/14 06:57:29 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:57:29 - mmengine - INFO - Iter(train) [272/400]  lr: 1.6524e-04  eta: 0:01:05  time: 0.4615  data_time: 0.0206  memory: 3982  loss: 0.1254  decode.loss_ce: 0.0833  decode.acc_seg: 95.5124  aux.loss_ce: 0.0421  aux.acc_seg: 95.0099
2023/06/14 06:57:33 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:57:33 - mmengine - INFO - Iter(train) [280/400]  lr: 1.5614e-04  eta: 0:01:01  time: 0.4601  data_time: 0.0195  memory: 3982  loss: 0.1117  decode.loss_ce: 0.0750  decode.acc_seg: 93.4249  aux.loss_ce: 0.0367  aux.acc_seg: 92.2370
2023/06/14 06:57:33 - mmengine - INFO - per class results:
2023/06/14 06:57:33 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    red     | 69.48 | 71.07 |
|   green    |  89.2 | 98.86 |
|   white    | 25.99 | 84.66 |
| seed-black | 72.82 | 79.93 |
| seed-white | 28.61 | 29.74 |
+------------+-------+-------+
2023/06/14 06:57:33 - mmengine - INFO - Iter(val) [11/11]    aAcc: 79.7800  mIoU: 57.2200  mAcc: 72.8500  data_time: 0.0033  time: 0.0173
2023/06/14 06:57:37 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:57:37 - mmengine - INFO - Iter(train) [288/400]  lr: 1.4703e-04  eta: 0:00:57  time: 0.4673  data_time: 0.0256  memory: 3982  loss: 0.1180  decode.loss_ce: 0.0772  decode.acc_seg: 91.7774  aux.loss_ce: 0.0408  aux.acc_seg: 89.4261
2023/06/14 06:57:41 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:57:41 - mmengine - INFO - Iter(train) [296/400]  lr: 1.3796e-04  eta: 0:00:53  time: 0.4694  data_time: 0.0281  memory: 3982  loss: 0.1157  decode.loss_ce: 0.0752  decode.acc_seg: 95.7689  aux.loss_ce: 0.0405  aux.acc_seg: 93.1546
2023/06/14 06:57:45 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:57:45 - mmengine - INFO - Iter(train) [304/400]  lr: 1.2895e-04  eta: 0:00:48  time: 0.4670  data_time: 0.0270  memory: 3982  loss: 0.1207  decode.loss_ce: 0.0803  decode.acc_seg: 91.6029  aux.loss_ce: 0.0404  aux.acc_seg: 92.4439
2023/06/14 06:57:49 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:57:49 - mmengine - INFO - Iter(train) [312/400]  lr: 1.2004e-04  eta: 0:00:44  time: 0.4646  data_time: 0.0237  memory: 3982  loss: 0.1160  decode.loss_ce: 0.0774  decode.acc_seg: 96.5972  aux.loss_ce: 0.0386  aux.acc_seg: 96.2233
2023/06/14 06:57:52 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:57:52 - mmengine - INFO - Iter(train) [320/400]  lr: 1.1128e-04  eta: 0:00:40  time: 0.4602  data_time: 0.0178  memory: 3982  loss: 0.1033  decode.loss_ce: 0.0663  decode.acc_seg: 91.3187  aux.loss_ce: 0.0370  aux.acc_seg: 87.0011
2023/06/14 06:57:52 - mmengine - INFO - Saving checkpoint at 40 epochs
2023/06/14 06:57:53 - mmengine - INFO - per class results:
2023/06/14 06:57:53 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    red     | 71.05 |  71.6 |
|   green    | 88.84 | 99.34 |
|   white    | 29.73 |  95.5 |
| seed-black | 71.49 |  76.9 |
| seed-white | 27.11 |  33.0 |
+------------+-------+-------+
2023/06/14 06:57:53 - mmengine - INFO - Iter(val) [11/11]    aAcc: 80.7700  mIoU: 57.6500  mAcc: 75.2700  data_time: 0.0033  time: 0.0173
2023/06/14 06:57:57 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:57:57 - mmengine - INFO - Iter(train) [328/400]  lr: 1.0268e-04  eta: 0:00:36  time: 0.4957  data_time: 0.0540  memory: 3982  loss: 0.0988  decode.loss_ce: 0.0633  decode.acc_seg: 95.7409  aux.loss_ce: 0.0355  aux.acc_seg: 95.1026
2023/06/14 06:58:01 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:58:01 - mmengine - INFO - Iter(train) [336/400]  lr: 9.4294e-05  eta: 0:00:32  time: 0.4949  data_time: 0.0540  memory: 3982  loss: 0.0958  decode.loss_ce: 0.0616  decode.acc_seg: 95.4975  aux.loss_ce: 0.0343  aux.acc_seg: 95.0558
2023/06/14 06:58:05 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:58:05 - mmengine - INFO - Iter(train) [344/400]  lr: 8.6146e-05  eta: 0:00:28  time: 0.4614  data_time: 0.0203  memory: 3982  loss: 0.1009  decode.loss_ce: 0.0655  decode.acc_seg: 93.5629  aux.loss_ce: 0.0355  aux.acc_seg: 87.9686
2023/06/14 06:58:09 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:58:09 - mmengine - INFO - Iter(train) [352/400]  lr: 7.8269e-05  eta: 0:00:24  time: 0.4604  data_time: 0.0185  memory: 3982  loss: 0.1050  decode.loss_ce: 0.0677  decode.acc_seg: 91.6303  aux.loss_ce: 0.0373  aux.acc_seg: 90.8660
2023/06/14 06:58:13 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:58:13 - mmengine - INFO - Iter(train) [360/400]  lr: 7.0695e-05  eta: 0:00:20  time: 0.4653  data_time: 0.0234  memory: 3982  loss: 0.0945  decode.loss_ce: 0.0615  decode.acc_seg: 95.6619  aux.loss_ce: 0.0330  aux.acc_seg: 95.0656
2023/06/14 06:58:13 - mmengine - INFO - per class results:
2023/06/14 06:58:13 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    red     | 66.04 | 66.58 |
|   green    | 89.45 | 99.15 |
|   white    | 26.18 | 95.36 |
| seed-black | 76.34 |  81.4 |
| seed-white | 27.46 | 35.65 |
+------------+-------+-------+
2023/06/14 06:58:13 - mmengine - INFO - Iter(val) [11/11]    aAcc: 78.0700  mIoU: 57.0900  mAcc: 75.6300  data_time: 0.0034  time: 0.0173
2023/06/14 06:58:17 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:58:17 - mmengine - INFO - Iter(train) [368/400]  lr: 6.3454e-05  eta: 0:00:16  time: 0.4938  data_time: 0.0522  memory: 3982  loss: 0.0931  decode.loss_ce: 0.0603  decode.acc_seg: 95.9143  aux.loss_ce: 0.0328  aux.acc_seg: 94.8570
2023/06/14 06:58:21 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:58:21 - mmengine - INFO - Iter(train) [376/400]  lr: 5.6574e-05  eta: 0:00:12  time: 0.4620  data_time: 0.0203  memory: 3982  loss: 0.0939  decode.loss_ce: 0.0607  decode.acc_seg: 90.7554  aux.loss_ce: 0.0332  aux.acc_seg: 87.7034
2023/06/14 06:58:25 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:58:25 - mmengine - INFO - Iter(train) [384/400]  lr: 5.0082e-05  eta: 0:00:08  time: 0.4760  data_time: 0.0343  memory: 3982  loss: 0.1012  decode.loss_ce: 0.0659  decode.acc_seg: 95.2093  aux.loss_ce: 0.0353  aux.acc_seg: 94.2330
2023/06/14 06:58:28 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:58:28 - mmengine - INFO - Iter(train) [392/400]  lr: 4.4005e-05  eta: 0:00:04  time: 0.4684  data_time: 0.0271  memory: 3982  loss: 0.0768  decode.loss_ce: 0.0495  decode.acc_seg: 97.2678  aux.loss_ce: 0.0273  aux.acc_seg: 96.7348
2023/06/14 06:58:32 - mmengine - INFO - Exp name: config_20230614_065503
2023/06/14 06:58:32 - mmengine - INFO - Iter(train) [400/400]  lr: 3.8366e-05  eta: 0:00:00  time: 0.4633  data_time: 0.0219  memory: 3982  loss: 0.0868  decode.loss_ce: 0.0558  decode.acc_seg: 95.7609  aux.loss_ce: 0.0310  aux.acc_seg: 95.6112
2023/06/14 06:58:32 - mmengine - INFO - Saving checkpoint at 50 epochs
2023/06/14 06:58:33 - mmengine - INFO - per class results:
2023/06/14 06:58:33 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
|    red     |  69.5 | 70.08 |
|   green    | 88.81 | 99.21 |
|   white    | 28.79 | 94.47 |
| seed-black | 75.53 | 82.24 |
| seed-white | 25.56 | 34.02 |
+------------+-------+-------+
2023/06/14 06:58:33 - mmengine - INFO - Iter(val) [11/11]    aAcc: 80.1400  mIoU: 57.6400  mAcc: 76.0000  data_time: 0.0033  time: 0.0173
